<?xml version="1.0" encoding="utf-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Overview</title>
    <link rel="stylesheet" type="text/css" href="css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <h1>Classes</h1>
      <div class="container">
        <h2 id="">\</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Description</th>
              <th/>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <a href="classes/Exception.xhtml">Exception</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/Facebook.xhtml">Facebook</a>
              </td>
              <td>Provides access to the Facebook Platform.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/FacebookAPIErrorCodes.xhtml">FacebookAPIErrorCodes</a>
              </td>
              <td>Error codes and descriptions for the Facebook API.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/FacebookApiException.xhtml">FacebookApiException</a>
              </td>
              <td>Thrown when an API call returns an exception.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/FacebookFeed_Item.xhtml">FacebookFeed_Item</a>
              </td>
              <td>FROM: http://www.acornartwork.com/blog/2010/04/19/tutorial-facebook-rss-feed-parser-in-pure-php/ EXAMPLE: 	//Run the function with the url and a number as arguments 	$fb = new TheFaceBook_communicator(); 	$dos = $fb-&gt;fetchFBFeed('http://facebook.com/feeds/status.php?id=xxxxxx&amp;viewer=xxxxxx&amp;key=xxxxx&amp;format=rss20', 3); 	//Print Facebook status updates 	echo '&lt;ul class="fb-updates"&gt;'; 		 foreach ($dos as $do) { 				echo '&lt;li&gt;'; 				echo '&lt;span class="update"&gt;' .$do-&gt;Description. '&lt;/span&gt;'; 				echo '&lt;span class="date"&gt;' .$do-&gt;Date. '&lt;/span&gt;'; 				echo '&lt;span class="link"&gt;&lt;a href="' .$do-&gt;Link. '"&gt;more&lt;/a&gt;&lt;/span&gt;'; 				echo '&lt;/li&gt;'; 		 } 	echo '&lt;/ul&gt;';</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/FacebookFeed_Item_Communicator.xhtml">FacebookFeed_Item_Communicator</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/FacebookFeed_Page.xhtml">FacebookFeed_Page</a>
              </td>
              <td>FROM: http://www.acornartwork.com/blog/2010/04/19/tutorial-facebook-rss-feed-parser-in-pure-php/ EXAMPLE: 	//Run the function with the url and a number as arguments 	$fb = new TheFaceBook_communicator(); 	$dos = $fb-&gt;fetchFBFeed('http://facebook.com/feeds/status.php?id=xxxxxx&amp;viewer=xxxxxx&amp;key=xxxxx&amp;format=rss20', 3); 	//Print Facebook status updates 	echo '&lt;ul class="fb-updates"&gt;'; 		 foreach ($dos as $do) { 				echo '&lt;li&gt;'; 				echo '&lt;span class="update"&gt;' .$do-&gt;Description. '&lt;/span&gt;'; 				echo '&lt;span class="date"&gt;' .$do-&gt;Date. '&lt;/span&gt;'; 				echo '&lt;span class="link"&gt;&lt;a href="' .$do-&gt;Link. '"&gt;more&lt;/a&gt;&lt;/span&gt;'; 				echo '&lt;/li&gt;'; 		 } 	echo '&lt;/ul&gt;';</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/FacebookFeed_UpdateTask.xhtml">FacebookFeed_UpdateTask</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/FacebookRestClient.xhtml">FacebookRestClient</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/FacebookRestClientException.xhtml">FacebookRestClientException</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/MyTwitter.xhtml">MyTwitter</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/MyTwitterData.xhtml">MyTwitterData</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthConsumer.xhtml">OAuthConsumer</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthDataStore.xhtml">OAuthDataStore</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthException.xhtml">OAuthException</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthRequest.xhtml">OAuthRequest</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthServer.xhtml">OAuthServer</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthSignatureMethod.xhtml">OAuthSignatureMethod</a>
              </td>
              <td>A class for implementing a Signature Method See section 9 ("Signing Requests") in the spec</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthSignatureMethod_HMAC_SHA1.xhtml">OAuthSignatureMethod_HMAC_SHA1</a>
              </td>
              <td>The HMAC-SHA1 signature method uses the HMAC-SHA1 signature algorithm as defined in [RFC2104] where the Signature Base String is the text and the key is the concatenated values (each first encoded per Parameter Encoding) of the Consumer Secret and Token Secret, separated by an '&amp;' character (ASCII code 38) even if empty.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthSignatureMethod_PLAINTEXT.xhtml">OAuthSignatureMethod_PLAINTEXT</a>
              </td>
              <td>The PLAINTEXT method does not provide any security protection and SHOULD only be used over a secure channel such as HTTPS. It does not use the Signature Base String.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthSignatureMethod_RSA_SHA1.xhtml">OAuthSignatureMethod_RSA_SHA1</a>
              </td>
              <td>The RSA-SHA1 signature method uses the RSASSA-PKCS1-v1_5 signature algorithm as defined in [RFC3447] section 8.2 (more simply known as PKCS#1), using SHA-1 as the hash function for EMSA-PKCS1-v1_5. It is assumed that the Consumer has provided its RSA public key in a verified way to the Service Provider, in a manner which is beyond the scope of this specification.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthToken.xhtml">OAuthToken</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/OAuthUtil.xhtml">OAuthUtil</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/Services_JSON.xhtml">Services_JSON</a>
              </td>
              <td>Converts to and from JSON format.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/Services_JSON_Error.xhtml">Services_JSON_Error</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/ShareThisDataObject.xhtml">ShareThisDataObject</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/ShareThisOptions.xhtml">ShareThisOptions</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/ShareThisSTE.xhtml">ShareThisSTE</a>
              </td>
              <td>Add a field to each SiteTree object and it's subclasses to enable Share icons.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/ShareThisSiteConfigDE.xhtml">ShareThisSiteConfigDE</a>
              </td>
              <td>
                <span class="unavailable">No description available</span>
              </td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/SocialNetworkingLinksDataObject.xhtml">SocialNetworkingLinksDataObject</a>
              </td>
              <td>author nicolaas[at]sunnysideup.co.nz description: creates a list of places where people can follow you (e.g. twitter, your blog, etc...)</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/SocialNetworkingModelAdmin.xhtml">SocialNetworkingModelAdmin</a>
              </td>
              <td>author: nicolaas[at]sunnysideup.co.nz description: manages social networking data objects</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/SocialNetworksSTE.xhtml">SocialNetworksSTE</a>
              </td>
              <td>Add a field to each SiteTree object and it's subclasses to enable "follow us on ...", this can be a blog, twitter, facebook or whatever else.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/TheFaceBook_communicator.xhtml">TheFaceBook_communicator</a>
              </td>
              <td>STOLEN FROM: http://www.acornartwork.com/blog/2010/04/19/tutorial-facebook-rss-feed-parser-in-pure-php/ EXAMPLE: 	//Run the function with the url and a number as arguments 	$fb = new TheFaceBook_communicator(); 	$dos = $fb-&gt;fetchFBFeed('http://facebook.com/feeds/status.php?id=xxxxxx&amp;viewer=xxxxxx&amp;key=xxxxx&amp;format=rss20', 3); 	//Print Facebook status updates 	echo '&lt;ul class="fb-updates"&gt;'; 		 foreach ($dos as $do) { 				echo '&lt;li&gt;'; 				echo '&lt;span class="update"&gt;' .$do-&gt;Description. '&lt;/span&gt;'; 				echo '&lt;span class="date"&gt;' .$do-&gt;Date. '&lt;/span&gt;'; 				echo '&lt;span class="link"&gt;&lt;a href="' .$do-&gt;Link. '"&gt;more&lt;/a&gt;&lt;/span&gt;'; 				echo '&lt;/li&gt;'; 		 } 	echo '&lt;/ul&gt;';</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/TwitterOAuth.xhtml">TwitterOAuth</a>
              </td>
              <td>Twitter OAuth class</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/simple_html_dom.xhtml">simple_html_dom</a>
              </td>
              <td>simple html dom parser Paperg - in the find routine: allow us to specify that we want case insensitive testing of the value of the selector.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
            <tr>
              <td>
                <a href="classes/simple_html_dom_node.xhtml">simple_html_dom_node</a>
              </td>
              <td>simple html dom node PaperG - added ability for "find" routine to lowercase the value of the selector.</td>
              <td class="testresult-SKIPPED">UNTESTED</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
