<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="OAuthSignatureMethod_PLAINTEXT" namespace="" name="OAuthSignatureMethod_PLAINTEXT" abstract="false" final="false" start="133" end="159">
  <file path="/var/www/_modules/sharethis/trunk/docs/en/phpdox/../../../third_party/twitter_oauth" file="OAuth.php" realpath="/var/www/_modules/sharethis/trunk/third_party/twitter_oauth/OAuth.php" size="26556" time="2015-03-14T10:23:27+13:00" unixtime="1426281807" sha1="9dcf674ba9395f89cdc13384736b9c9f7ffcc651" relative="third_party/twitter_oauth/OAuth.php"/>
  <docblock>
    <description compact="The PLAINTEXT method does not provide any security protection and SHOULD only be used over a secure channel such as HTTPS. It does not use the Signature Base String.">- Chapter 9.4 ("PLAINTEXT")</description>
  </docblock>
  <extends full="OAuthSignatureMethod" namespace="" name="OAuthSignatureMethod"/>
  <method name="get_name" start="134" end="136" abstract="false" final="false" static="false" visibility="public"/>
  <method name="build_signature" start="147" end="158" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="oauth_signature is set to the concatenated encoded values of the Consumer Secret and Token Secret, separated by a '&amp;' character (ASCII code 38), even if either secret is empty. The result MUST be encoded again.">- Chapter 9.4.1 ("Generating Signatures")

Please note that the second encoding MUST NOT happen in the SignatureMethod, as
OAuthRequest handles this!</description>
    </docblock>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <parameter name="consumer" byreference="false" type="{unknown}"/>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </method>
  <parent full="OAuthSignatureMethod" namespace="" name="OAuthSignatureMethod">
    <method name="get_name" start="72" end="72" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Needs to return the name of the Signature Method (ie HMAC-SHA1)"/>
        <return type="string"/>
      </docblock>
    </method>
    <method name="build_signature" start="84" end="84" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Build up the signature NOTE: The output of this function MUST NOT be urlencoded.">the encoding is handled in OAuthRequest when the final
request is serialized</description>
        <param type="object" variable="$request">
          <type full="OAuthRequest" namespace="" name="OAuthRequest"/>
        </param>
        <param type="object" variable="$consumer">
          <type full="OAuthConsumer" namespace="" name="OAuthConsumer"/>
        </param>
        <param type="object" variable="$token">
          <type full="OAuthToken" namespace="" name="OAuthToken"/>
        </param>
        <return type="string"/>
      </docblock>
      <parameter name="request" byreference="false" type="{unknown}"/>
      <parameter name="consumer" byreference="false" type="{unknown}"/>
      <parameter name="token" byreference="false" type="{unknown}"/>
    </method>
    <method name="check_signature" start="94" end="97" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Verifies that a given signature is correct"/>
        <param type="object" variable="$request">
          <type full="OAuthRequest" namespace="" name="OAuthRequest"/>
        </param>
        <param type="object" variable="$consumer">
          <type full="OAuthConsumer" namespace="" name="OAuthConsumer"/>
        </param>
        <param type="object" variable="$token">
          <type full="OAuthToken" namespace="" name="OAuthToken"/>
        </param>
        <param type="string" variable="$signature"/>
        <return type="object">
          <type full="bool" namespace="" name="bool"/>
        </return>
      </docblock>
      <parameter name="request" byreference="false" type="{unknown}"/>
      <parameter name="consumer" byreference="false" type="{unknown}"/>
      <parameter name="token" byreference="false" type="{unknown}"/>
      <parameter name="signature" byreference="false" type="{unknown}"/>
    </method>
  </parent>
</class>
