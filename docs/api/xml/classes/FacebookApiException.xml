<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="FacebookApiException" namespace="" name="FacebookApiException" abstract="false" final="false" start="31" end="107">
  <file path="/var/www/_modules/sharethis/trunk/docs/en/phpdox/../../../third_party" file="facebook.php" realpath="/var/www/_modules/sharethis/trunk/third_party/facebook.php" size="28377" time="2015-03-14T10:23:27+13:00" unixtime="1426281807" sha1="5ec0d447bee143d2f0cf0e045a038712944ce5fd" relative="third_party/facebook.php"/>
  <docblock>
    <description compact="Thrown when an API call returns an exception."/>
    <author value="Naitik Shah &lt;naitik@facebook.com&gt;"/>
  </docblock>
  <extends full="Exception" namespace="" name="Exception"/>
  <member name="result" type="{unknown}" visibility="protected" line="36">
    <docblock>
      <description compact="The result from the API server that represents the exception information."/>
    </docblock>
  </member>
  <constructor name="__construct" start="43" end="62" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Make a new API Exception with the given result."/>
      <param description="the result from the API server" type="object" variable="$result">
        <type full="Array" namespace="" name="Array"/>
      </param>
    </docblock>
    <parameter name="result" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="OAuth 2.0 Draft 10 style" line="49"/>
    </inline>
  </constructor>
  <method name="getResult" start="69" end="71" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return the associated result object returned by the API server."/>
      <returns value="Array the result from the API server"/>
    </docblock>
  </method>
  <method name="getType" start="79" end="93" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the associated type for the error. This will default to 'Exception' when a type is not available."/>
      <return type="object">
        <type full="String" namespace="" name="String"/>
      </return>
    </docblock>
    <inline>
      <comment value="OAuth 2.0 Draft 10 style" line="83"/>
    </inline>
  </method>
  <method name="__toString" start="100" end="106" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="To make debugging easier."/>
      <returns value="String the string representation of the error"/>
    </docblock>
  </method>
  <parent full="Exception" namespace="" name="Exception">
    <member name="message" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception message"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="code" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception code"/>
      <var type="int"/>
    </docblock>
  </member>
    <member name="file" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The filename where the exception was created"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="line" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The line where the exception was created"/>
      <var type="int"/>
    </docblock>
  </member>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct the exception"/>
      <return type="void"/>
    </docblock>
    <parameter name="message" optional="true" byreference="false" type="string"/>
    <parameter name="code" optional="true" byreference="false" type="int"/>
    <parameter name="previous" optional="true" byreference="false" type="object" class="Exception"/>
  </constructor>
    <method name="getMessage" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception message"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getPrevious" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Returns previous Exception"/>
      <return type="Exception"/>
    </docblock>
  </method>
    <method name="getCode" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception code"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getFile" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the file in which the exception occurred"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getLine" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the line in which the exception occurred"/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="getTrace" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace"/>
      <return type="array"/>
    </docblock>
  </method>
    <method name="getTraceAsString" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace as a string"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="String representation of the exception"/>
      <return type="string"/>
    </docblock>
  </method>
  </parent>
</class>
