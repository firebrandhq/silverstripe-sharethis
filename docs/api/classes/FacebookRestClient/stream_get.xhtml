<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#"/>
          </li>
          <li class="separator">
            <a title="FacebookRestClient" href="../../classes/FacebookRestClient.xhtml">FacebookRestClient</a>
          </li>
          <li class="separator">stream_get</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="../../source/third_party/facebookapi_php5_restlib.php.xhtml#line1885">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>FacebookRestClient::</small>stream_get</h1>
        <h4>Gets the stream on behalf of a user using a set of users. This call will return the latest $limit queries between $start_time and $end_time.</h4>
        <p/>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function stream_get([int
        $viewer_id = null,
            [array
        $source_ids = null,
            [int
        $start_time = 0,
            [int
        $end_time = 0,
            [int
        $limit = 30,
            [string
        $filter_key = '',
            [
        $exportable_only = false,
            [array
        $metadata = null,
            [
        $post_ids = null]]]]]]]]] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$viewer_id</code>
                —
                int</dt>
          <dd>user making the call (def: session)</dd>
          <dt><code>$source_ids</code>
                —
                array</dt>
          <dd>users/pages to look at (def: all connections)</dd>
          <dt><code>$start_time</code>
                —
                integer</dt>
          <dd>start time to look for stories (def: 1 day ago)</dd>
          <dt><code>$end_time</code>
                —
                integer</dt>
          <dd>end time to look for stories (def: now)</dd>
          <dt><code>$limit</code>
                —
                integer</dt>
          <dd>number of stories to attempt to fetch (def: 30)</dd>
          <dt><code>$filter_key</code>
                —
                string</dt>
          <dd>key returned by stream.getFilters to fetch</dd>
          <dt><code>$exportable_only</code>
                —
                </dt>
          <dd/>
          <dt><code>$metadata</code>
                —
                array</dt>
          <dd>metadata to include with the return, allows<br/>requested metadata to be returned, such as<br/>                          profiles, albums, photo_tags</dd>
          <dt><code>$post_ids</code>
                —
                </dt>
          <dd/>
        </dl>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>array(</dt>
          <dd><br/>'posts'      =&gt; array of posts,
          // if requested, the following data may be returned
          'profiles'   =&gt; array of profile metadata of users/pages in posts
          'albums'     =&gt; array of album metadata in posts
          'photo_tags' =&gt; array of photo_tags for photos in posts
        )</dd>
        </dl>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
